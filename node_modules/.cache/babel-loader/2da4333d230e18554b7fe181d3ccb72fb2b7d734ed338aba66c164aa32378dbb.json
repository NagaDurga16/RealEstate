{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  value: 0,\n  waterCans: [],\n  recordPayments: {\n    payment: 20,\n    date: new Date()\n  },\n  transactions: [],\n  balance: 0,\n  settings: {\n    canCapacity: 0,\n    pricePerCan: 0,\n    familyStrength: 0\n  },\n  intialvalue: {\n    capacity: 0,\n    price: 1,\n    date: new Date()\n  }\n};\nexport const canCounter = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    addWaterCan: (state, action) => {\n      const {\n        capacity\n      } = action.payload.canCapacity;\n      const {\n        price\n      } = action.payload.pricePerCan;\n      const {\n        family\n      } = action.payload.familyStrength;\n      const {\n        date\n      } = new Date();\n      state.thisMonth += 1;\n      state.dayCalculator = state.personPerDay += capacity / 30;\n      state.balance -= price;\n    },\n    recordPayment: (state, action) => {\n      const {\n        date,\n        payment\n      } = action.payload;\n      state.transactions = [...state.transactions, {\n        date,\n        payment\n      }];\n    },\n    edit: (state, action) => {\n      state.settings.canCapacity = action.payload.canCapacity;\n      state.settings.pricePerCan = action.payload.pricePerCan;\n    },\n    updateSettings: (state, action) => {\n      state.settings.canCapacity = action.payload.canCapacity;\n      state.settings.pricePerCan = action.payload.pricePerCan;\n      state.settings.familyStrength = action.payload.familyStrength;\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  addWaterCan,\n  recordPayment,\n  edit,\n  updateSettings\n} = canCounter.actions;\nexport default canCounter.reducer;","map":{"version":3,"names":["createSlice","initialState","value","waterCans","recordPayments","payment","date","Date","transactions","balance","settings","canCapacity","pricePerCan","familyStrength","intialvalue","capacity","price","canCounter","name","reducers","addWaterCan","state","action","payload","family","thisMonth","dayCalculator","personPerDay","recordPayment","edit","updateSettings","actions","reducer"],"sources":["/home/nagadurga/react-components/src/Water-Tracker/Cancounter.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  value: 0,\n  waterCans: [],\n  recordPayments: { payment: 20, date: new Date() },\n  transactions: [],\n  balance: 0,\n  settings: { canCapacity: 0, pricePerCan: 0, familyStrength: 0 },\n  intialvalue: { capacity: 0, price: 1, date: new Date() },\n}\n\nexport const canCounter= createSlice({\n  name: 'counter',\n  initialState,\n    reducers: {\n      addWaterCan: (state, action) => {\n        const{capacity} = action.payload.canCapacity;\n        const{price} = action.payload.pricePerCan;\n        const{family}=action.payload.familyStrength;\n        const{date}=new Date();\n\n        state.thisMonth +=1;\n        state.dayCalculator = \n        state.personPerDay+= capacity / 30;\n        state.balance -=price;\n      },\n\n      recordPayment: (state, action) => {\n        const { date, payment } = action.payload;\n       \n        state.transactions = [...state.transactions, { date, payment }];\n      },\n  \n\n      edit: (state, action) => {\n        state.settings.canCapacity = action.payload.canCapacity;\n        state.settings.pricePerCan = action.payload.pricePerCan;\n      },\n\n\n      updateSettings: (state, action) => {\n        state.settings.canCapacity = action.payload.canCapacity;\n        state.settings.pricePerCan = action.payload.pricePerCan;\n        state.settings.familyStrength = action.payload.familyStrength;\n      },\n  \n      \n    } \n});\n\n// Action creators are generated for each case reducer function\nexport const { addWaterCan,recordPayment, edit, updateSettings} = canCounter.actions\n\nexport default canCounter.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,CAAC;EACRC,SAAS,EAAE,EAAE;EACbC,cAAc,EAAE;IAAEC,OAAO,EAAE,EAAE;IAAEC,IAAI,EAAE,IAAIC,IAAI,CAAC;EAAE,CAAC;EACjDC,YAAY,EAAE,EAAE;EAChBC,OAAO,EAAE,CAAC;EACVC,QAAQ,EAAE;IAAEC,WAAW,EAAE,CAAC;IAAEC,WAAW,EAAE,CAAC;IAAEC,cAAc,EAAE;EAAE,CAAC;EAC/DC,WAAW,EAAE;IAAEC,QAAQ,EAAE,CAAC;IAAEC,KAAK,EAAE,CAAC;IAAEV,IAAI,EAAE,IAAIC,IAAI,CAAC;EAAE;AACzD,CAAC;AAED,OAAO,MAAMU,UAAU,GAAEjB,WAAW,CAAC;EACnCkB,IAAI,EAAE,SAAS;EACfjB,YAAY;EACVkB,QAAQ,EAAE;IACRC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9B,MAAK;QAACP;MAAQ,CAAC,GAAGO,MAAM,CAACC,OAAO,CAACZ,WAAW;MAC5C,MAAK;QAACK;MAAK,CAAC,GAAGM,MAAM,CAACC,OAAO,CAACX,WAAW;MACzC,MAAK;QAACY;MAAM,CAAC,GAACF,MAAM,CAACC,OAAO,CAACV,cAAc;MAC3C,MAAK;QAACP;MAAI,CAAC,GAAC,IAAIC,IAAI,CAAC,CAAC;MAEtBc,KAAK,CAACI,SAAS,IAAG,CAAC;MACnBJ,KAAK,CAACK,aAAa,GACnBL,KAAK,CAACM,YAAY,IAAGZ,QAAQ,GAAG,EAAE;MAClCM,KAAK,CAACZ,OAAO,IAAGO,KAAK;IACvB,CAAC;IAEDY,aAAa,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MAChC,MAAM;QAAEhB,IAAI;QAAED;MAAQ,CAAC,GAAGiB,MAAM,CAACC,OAAO;MAExCF,KAAK,CAACb,YAAY,GAAG,CAAC,GAAGa,KAAK,CAACb,YAAY,EAAE;QAAEF,IAAI;QAAED;MAAQ,CAAC,CAAC;IACjE,CAAC;IAGDwB,IAAI,EAAEA,CAACR,KAAK,EAAEC,MAAM,KAAK;MACvBD,KAAK,CAACX,QAAQ,CAACC,WAAW,GAAGW,MAAM,CAACC,OAAO,CAACZ,WAAW;MACvDU,KAAK,CAACX,QAAQ,CAACE,WAAW,GAAGU,MAAM,CAACC,OAAO,CAACX,WAAW;IACzD,CAAC;IAGDkB,cAAc,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACX,QAAQ,CAACC,WAAW,GAAGW,MAAM,CAACC,OAAO,CAACZ,WAAW;MACvDU,KAAK,CAACX,QAAQ,CAACE,WAAW,GAAGU,MAAM,CAACC,OAAO,CAACX,WAAW;MACvDS,KAAK,CAACX,QAAQ,CAACG,cAAc,GAAGS,MAAM,CAACC,OAAO,CAACV,cAAc;IAC/D;EAGF;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEO,WAAW;EAACQ,aAAa;EAAEC,IAAI;EAAEC;AAAc,CAAC,GAAGb,UAAU,CAACc,OAAO;AAEpF,eAAed,UAAU,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}